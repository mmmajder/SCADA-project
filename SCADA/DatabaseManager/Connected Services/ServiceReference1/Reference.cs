//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManager.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.OutputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.AO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.DO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.InputTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.DI))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.AI))]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IOaddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DatabaseManager.ServiceReference1.TagType TagTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IOaddress {
            get {
                return this.IOaddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IOaddressField, value) != true)) {
                    this.IOaddressField = value;
                    this.RaisePropertyChanged("IOaddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DatabaseManager.ServiceReference1.TagType TagType {
            get {
                return this.TagTypeField;
            }
            set {
                if ((this.TagTypeField.Equals(value) != true)) {
                    this.TagTypeField = value;
                    this.RaisePropertyChanged("TagType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputTag", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.AO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.DO))]
    public partial class OutputTag : DatabaseManager.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((this.InitialValueField.Equals(value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AO", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    public partial class AO : DatabaseManager.ServiceReference1.OutputTag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DO", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    public partial class DO : DatabaseManager.ServiceReference1.OutputTag {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputTag", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.DI))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DatabaseManager.ServiceReference1.AI))]
    public partial class InputTag : DatabaseManager.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DatabaseManager.ServiceReference1.DriverType DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveScanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScanTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DatabaseManager.ServiceReference1.DriverType Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((this.DriverField.Equals(value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActiveScan {
            get {
                return this.IsActiveScanField;
            }
            set {
                if ((this.IsActiveScanField.Equals(value) != true)) {
                    this.IsActiveScanField = value;
                    this.RaisePropertyChanged("IsActiveScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScanTime {
            get {
                return this.ScanTimeField;
            }
            set {
                if ((this.ScanTimeField.Equals(value) != true)) {
                    this.ScanTimeField = value;
                    this.RaisePropertyChanged("ScanTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DI", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    public partial class DI : DatabaseManager.ServiceReference1.InputTag {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AI", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    [System.SerializableAttribute()]
    public partial class AI : DatabaseManager.ServiceReference1.InputTag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagType", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    public enum TagType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AI = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DI = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DO = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DriverType", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    public enum DriverType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Simulation = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RealTime = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Alarms")]
    [System.SerializableAttribute()]
    public partial class Alarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DatabaseManager.ServiceReference1.AI TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DatabaseManager.ServiceReference1.AlarmType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DatabaseManager.ServiceReference1.AI Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DatabaseManager.ServiceReference1.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Alarms")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        low = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        high = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAuthentication")]
    public interface IAuthentication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Registration", ReplyAction="http://tempuri.org/IAuthentication/RegistrationResponse")]
        bool Registration(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Registration", ReplyAction="http://tempuri.org/IAuthentication/RegistrationResponse")]
        System.Threading.Tasks.Task<bool> RegistrationAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Login", ReplyAction="http://tempuri.org/IAuthentication/LoginResponse")]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Login", ReplyAction="http://tempuri.org/IAuthentication/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Logout", ReplyAction="http://tempuri.org/IAuthentication/LogoutResponse")]
        bool Logout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/Logout", ReplyAction="http://tempuri.org/IAuthentication/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationChannel : DatabaseManager.ServiceReference1.IAuthentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationClient : System.ServiceModel.ClientBase<DatabaseManager.ServiceReference1.IAuthentication>, DatabaseManager.ServiceReference1.IAuthentication {
        
        public AuthenticationClient() {
        }
        
        public AuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Registration(string username, string password) {
            return base.Channel.Registration(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrationAsync(string username, string password) {
            return base.Channel.RegistrationAsync(username, password);
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool Logout(string token) {
            return base.Channel.Logout(token);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string token) {
            return base.Channel.LogoutAsync(token);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDBManagerService")]
    public interface IDBManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDBManagerService/ChangeOutputValueResponse")]
        bool ChangeOutputValue(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDBManagerService/ChangeOutputValueResponse")]
        System.Threading.Tasks.Task<bool> ChangeOutputValueAsync(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/ChangeScanStatus", ReplyAction="http://tempuri.org/IDBManagerService/ChangeScanStatusResponse")]
        bool ChangeScanStatus(string tagName, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/ChangeScanStatus", ReplyAction="http://tempuri.org/IDBManagerService/ChangeScanStatusResponse")]
        System.Threading.Tasks.Task<bool> ChangeScanStatusAsync(string tagName, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetInputTags", ReplyAction="http://tempuri.org/IDBManagerService/GetInputTagsResponse")]
        string GetInputTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetInputTags", ReplyAction="http://tempuri.org/IDBManagerService/GetInputTagsResponse")]
        System.Threading.Tasks.Task<string> GetInputTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddAITag", ReplyAction="http://tempuri.org/IDBManagerService/AddAITagResponse")]
        bool AddAITag(DatabaseManager.ServiceReference1.AI ai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddAITag", ReplyAction="http://tempuri.org/IDBManagerService/AddAITagResponse")]
        System.Threading.Tasks.Task<bool> AddAITagAsync(DatabaseManager.ServiceReference1.AI ai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddAOTag", ReplyAction="http://tempuri.org/IDBManagerService/AddAOTagResponse")]
        bool AddAOTag(DatabaseManager.ServiceReference1.AO ao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddAOTag", ReplyAction="http://tempuri.org/IDBManagerService/AddAOTagResponse")]
        System.Threading.Tasks.Task<bool> AddAOTagAsync(DatabaseManager.ServiceReference1.AO ao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddDITag", ReplyAction="http://tempuri.org/IDBManagerService/AddDITagResponse")]
        bool AddDITag(DatabaseManager.ServiceReference1.DI di);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddDITag", ReplyAction="http://tempuri.org/IDBManagerService/AddDITagResponse")]
        System.Threading.Tasks.Task<bool> AddDITagAsync(DatabaseManager.ServiceReference1.DI di);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddDOTag", ReplyAction="http://tempuri.org/IDBManagerService/AddDOTagResponse")]
        bool AddDOTag(DatabaseManager.ServiceReference1.DO digitalOutput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddDOTag", ReplyAction="http://tempuri.org/IDBManagerService/AddDOTagResponse")]
        System.Threading.Tasks.Task<bool> AddDOTagAsync(DatabaseManager.ServiceReference1.DO digitalOutput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetOutputValues", ReplyAction="http://tempuri.org/IDBManagerService/GetOutputValuesResponse")]
        string GetOutputValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetOutputValues", ReplyAction="http://tempuri.org/IDBManagerService/GetOutputValuesResponse")]
        System.Threading.Tasks.Task<string> GetOutputValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAllTags", ReplyAction="http://tempuri.org/IDBManagerService/GetAllTagsResponse")]
        string GetAllTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAllTags", ReplyAction="http://tempuri.org/IDBManagerService/GetAllTagsResponse")]
        System.Threading.Tasks.Task<string> GetAllTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/RemoveTag", ReplyAction="http://tempuri.org/IDBManagerService/RemoveTagResponse")]
        bool RemoveTag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/RemoveTag", ReplyAction="http://tempuri.org/IDBManagerService/RemoveTagResponse")]
        System.Threading.Tasks.Task<bool> RemoveTagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAITags", ReplyAction="http://tempuri.org/IDBManagerService/GetAITagsResponse")]
        string GetAITags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAITags", ReplyAction="http://tempuri.org/IDBManagerService/GetAITagsResponse")]
        System.Threading.Tasks.Task<string> GetAITagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAIById", ReplyAction="http://tempuri.org/IDBManagerService/GetAIByIdResponse")]
        DatabaseManager.ServiceReference1.AI GetAIById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAIById", ReplyAction="http://tempuri.org/IDBManagerService/GetAIByIdResponse")]
        System.Threading.Tasks.Task<DatabaseManager.ServiceReference1.AI> GetAIByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddAlarm", ReplyAction="http://tempuri.org/IDBManagerService/AddAlarmResponse")]
        bool AddAlarm(DatabaseManager.ServiceReference1.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/AddAlarm", ReplyAction="http://tempuri.org/IDBManagerService/AddAlarmResponse")]
        System.Threading.Tasks.Task<bool> AddAlarmAsync(DatabaseManager.ServiceReference1.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/RemoveAlarm", ReplyAction="http://tempuri.org/IDBManagerService/RemoveAlarmResponse")]
        bool RemoveAlarm(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/RemoveAlarm", ReplyAction="http://tempuri.org/IDBManagerService/RemoveAlarmResponse")]
        System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAlarms", ReplyAction="http://tempuri.org/IDBManagerService/GetAlarmsResponse")]
        string GetAlarms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManagerService/GetAlarms", ReplyAction="http://tempuri.org/IDBManagerService/GetAlarmsResponse")]
        System.Threading.Tasks.Task<string> GetAlarmsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBManagerServiceChannel : DatabaseManager.ServiceReference1.IDBManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBManagerServiceClient : System.ServiceModel.ClientBase<DatabaseManager.ServiceReference1.IDBManagerService>, DatabaseManager.ServiceReference1.IDBManagerService {
        
        public DBManagerServiceClient() {
        }
        
        public DBManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ChangeOutputValue(string tagName, double value) {
            return base.Channel.ChangeOutputValue(tagName, value);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeOutputValueAsync(string tagName, double value) {
            return base.Channel.ChangeOutputValueAsync(tagName, value);
        }
        
        public bool ChangeScanStatus(string tagName, bool status) {
            return base.Channel.ChangeScanStatus(tagName, status);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeScanStatusAsync(string tagName, bool status) {
            return base.Channel.ChangeScanStatusAsync(tagName, status);
        }
        
        public string GetInputTags() {
            return base.Channel.GetInputTags();
        }
        
        public System.Threading.Tasks.Task<string> GetInputTagsAsync() {
            return base.Channel.GetInputTagsAsync();
        }
        
        public bool AddAITag(DatabaseManager.ServiceReference1.AI ai) {
            return base.Channel.AddAITag(ai);
        }
        
        public System.Threading.Tasks.Task<bool> AddAITagAsync(DatabaseManager.ServiceReference1.AI ai) {
            return base.Channel.AddAITagAsync(ai);
        }
        
        public bool AddAOTag(DatabaseManager.ServiceReference1.AO ao) {
            return base.Channel.AddAOTag(ao);
        }
        
        public System.Threading.Tasks.Task<bool> AddAOTagAsync(DatabaseManager.ServiceReference1.AO ao) {
            return base.Channel.AddAOTagAsync(ao);
        }
        
        public bool AddDITag(DatabaseManager.ServiceReference1.DI di) {
            return base.Channel.AddDITag(di);
        }
        
        public System.Threading.Tasks.Task<bool> AddDITagAsync(DatabaseManager.ServiceReference1.DI di) {
            return base.Channel.AddDITagAsync(di);
        }
        
        public bool AddDOTag(DatabaseManager.ServiceReference1.DO digitalOutput) {
            return base.Channel.AddDOTag(digitalOutput);
        }
        
        public System.Threading.Tasks.Task<bool> AddDOTagAsync(DatabaseManager.ServiceReference1.DO digitalOutput) {
            return base.Channel.AddDOTagAsync(digitalOutput);
        }
        
        public string GetOutputValues() {
            return base.Channel.GetOutputValues();
        }
        
        public System.Threading.Tasks.Task<string> GetOutputValuesAsync() {
            return base.Channel.GetOutputValuesAsync();
        }
        
        public string GetAllTags() {
            return base.Channel.GetAllTags();
        }
        
        public System.Threading.Tasks.Task<string> GetAllTagsAsync() {
            return base.Channel.GetAllTagsAsync();
        }
        
        public bool RemoveTag(string id) {
            return base.Channel.RemoveTag(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTagAsync(string id) {
            return base.Channel.RemoveTagAsync(id);
        }
        
        public string GetAITags() {
            return base.Channel.GetAITags();
        }
        
        public System.Threading.Tasks.Task<string> GetAITagsAsync() {
            return base.Channel.GetAITagsAsync();
        }
        
        public DatabaseManager.ServiceReference1.AI GetAIById(string id) {
            return base.Channel.GetAIById(id);
        }
        
        public System.Threading.Tasks.Task<DatabaseManager.ServiceReference1.AI> GetAIByIdAsync(string id) {
            return base.Channel.GetAIByIdAsync(id);
        }
        
        public bool AddAlarm(DatabaseManager.ServiceReference1.Alarm alarm) {
            return base.Channel.AddAlarm(alarm);
        }
        
        public System.Threading.Tasks.Task<bool> AddAlarmAsync(DatabaseManager.ServiceReference1.Alarm alarm) {
            return base.Channel.AddAlarmAsync(alarm);
        }
        
        public bool RemoveAlarm(string id) {
            return base.Channel.RemoveAlarm(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string id) {
            return base.Channel.RemoveAlarmAsync(id);
        }
        
        public string GetAlarms() {
            return base.Channel.GetAlarms();
        }
        
        public System.Threading.Tasks.Task<string> GetAlarmsAsync() {
            return base.Channel.GetAlarmsAsync();
        }
    }
}
