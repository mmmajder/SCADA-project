//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmInvoked", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model")]
    [System.SerializableAttribute()]
    public partial class AlarmInvoked : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ServiceReference1.AlarmType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmId {
            get {
                return this.AlarmIdField;
            }
            set {
                if ((this.AlarmIdField.Equals(value) != true)) {
                    this.AlarmIdField = value;
                    this.RaisePropertyChanged("AlarmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ServiceReference1.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Alarms")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        low = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        high = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagInvoked", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model")]
    [System.SerializableAttribute()]
    public partial class TagInvoked : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ServiceReference1.TagType TagTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ServiceReference1.TagType TagType {
            get {
                return this.TagTypeField;
            }
            set {
                if ((this.TagTypeField.Equals(value) != true)) {
                    this.TagTypeField = value;
                    this.RaisePropertyChanged("TagType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagType", Namespace="http://schemas.datacontract.org/2004/07/SCADA.Model.Tags")]
    public enum TagType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AI = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DI = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DO = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReportManagerService")]
    public interface IReportManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AlarmsInSameTimePeriod", ReplyAction="http://tempuri.org/IReportManagerService/AlarmsInSameTimePeriodResponse")]
        ReportManager.ServiceReference1.AlarmInvoked[] AlarmsInSameTimePeriod(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AlarmsInSameTimePeriod", ReplyAction="http://tempuri.org/IReportManagerService/AlarmsInSameTimePeriodResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmInvoked[]> AlarmsInSameTimePeriodAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AlarmsByPriority", ReplyAction="http://tempuri.org/IReportManagerService/AlarmsByPriorityResponse")]
        ReportManager.ServiceReference1.AlarmInvoked[] AlarmsByPriority(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AlarmsByPriority", ReplyAction="http://tempuri.org/IReportManagerService/AlarmsByPriorityResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmInvoked[]> AlarmsByPriorityAsync(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/TagInvokecInSameTimePeriod", ReplyAction="http://tempuri.org/IReportManagerService/TagInvokecInSameTimePeriodResponse")]
        ReportManager.ServiceReference1.TagInvoked[] TagInvokecInSameTimePeriod(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/TagInvokecInSameTimePeriod", ReplyAction="http://tempuri.org/IReportManagerService/TagInvokecInSameTimePeriodResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> TagInvokecInSameTimePeriodAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/LastValueOfAITags", ReplyAction="http://tempuri.org/IReportManagerService/LastValueOfAITagsResponse")]
        ReportManager.ServiceReference1.TagInvoked[] LastValueOfAITags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/LastValueOfAITags", ReplyAction="http://tempuri.org/IReportManagerService/LastValueOfAITagsResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> LastValueOfAITagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/LastValueOfDITags", ReplyAction="http://tempuri.org/IReportManagerService/LastValueOfDITagsResponse")]
        ReportManager.ServiceReference1.TagInvoked[] LastValueOfDITags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/LastValueOfDITags", ReplyAction="http://tempuri.org/IReportManagerService/LastValueOfDITagsResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> LastValueOfDITagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AllValuesOfTag", ReplyAction="http://tempuri.org/IReportManagerService/AllValuesOfTagResponse")]
        ReportManager.ServiceReference1.TagInvoked[] AllValuesOfTag(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AllValuesOfTag", ReplyAction="http://tempuri.org/IReportManagerService/AllValuesOfTagResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> AllValuesOfTagAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerServiceChannel : ReportManager.ServiceReference1.IReportManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerServiceClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference1.IReportManagerService>, ReportManager.ServiceReference1.IReportManagerService {
        
        public ReportManagerServiceClient() {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ServiceReference1.AlarmInvoked[] AlarmsInSameTimePeriod(System.DateTime start, System.DateTime end) {
            return base.Channel.AlarmsInSameTimePeriod(start, end);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmInvoked[]> AlarmsInSameTimePeriodAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.AlarmsInSameTimePeriodAsync(start, end);
        }
        
        public ReportManager.ServiceReference1.AlarmInvoked[] AlarmsByPriority(int priority) {
            return base.Channel.AlarmsByPriority(priority);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmInvoked[]> AlarmsByPriorityAsync(int priority) {
            return base.Channel.AlarmsByPriorityAsync(priority);
        }
        
        public ReportManager.ServiceReference1.TagInvoked[] TagInvokecInSameTimePeriod(System.DateTime start, System.DateTime end) {
            return base.Channel.TagInvokecInSameTimePeriod(start, end);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> TagInvokecInSameTimePeriodAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.TagInvokecInSameTimePeriodAsync(start, end);
        }
        
        public ReportManager.ServiceReference1.TagInvoked[] LastValueOfAITags() {
            return base.Channel.LastValueOfAITags();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> LastValueOfAITagsAsync() {
            return base.Channel.LastValueOfAITagsAsync();
        }
        
        public ReportManager.ServiceReference1.TagInvoked[] LastValueOfDITags() {
            return base.Channel.LastValueOfDITags();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> LastValueOfDITagsAsync() {
            return base.Channel.LastValueOfDITagsAsync();
        }
        
        public ReportManager.ServiceReference1.TagInvoked[] AllValuesOfTag(string tagName) {
            return base.Channel.AllValuesOfTag(tagName);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagInvoked[]> AllValuesOfTagAsync(string tagName) {
            return base.Channel.AllValuesOfTagAsync(tagName);
        }
    }
}
